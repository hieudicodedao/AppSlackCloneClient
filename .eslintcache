[{"/home/captainspring/Desktop/code/WebSocket/myproject2/clientslack/src/App.js":"1","/home/captainspring/Desktop/code/WebSocket/myproject2/clientslack/src/Components/Login/Index.js":"2","/home/captainspring/Desktop/code/WebSocket/myproject2/clientslack/src/index.js":"3","/home/captainspring/Desktop/code/WebSocket/myproject2/clientslack/src/Components/Register/Index.js":"4","/home/captainspring/Desktop/code/WebSocket/myproject2/clientslack/src/Components/Main/Index.js":"5","/home/captainspring/Desktop/code/WebSocket/myproject2/clientslack/src/Components/Main-Channel/Index.js":"6","/home/captainspring/Desktop/code/WebSocket/myproject2/clientslack/src/Components/Main-Status/Index.js":"7","/home/captainspring/Desktop/code/WebSocket/myproject2/clientslack/src/Components/Main-Topic/Index.js":"8","/home/captainspring/Desktop/code/WebSocket/myproject2/clientslack/src/Components/TopicPost/Index.js":"9","/home/captainspring/Desktop/code/WebSocket/myproject2/clientslack/src/Components/Main-Thread/Index.js":"10","/home/captainspring/Desktop/code/WebSocket/myproject2/clientslack/src/Components/Sub-Thread/Index.js":"11","/home/captainspring/Desktop/code/WebSocket/myproject2/clientslack/src/Components/Sub-Channel/Index.js":"12","/home/captainspring/Desktop/code/WebSocket/myproject2/clientslack/src/Config/Index.js":"13","/home/captainspring/Desktop/code/WebSocket/myproject2/clientslack/src/API/index.js":"14","/home/captainspring/Desktop/code/WebSocket/myproject2/clientslack/src/Components/WrapMain/Index.js":"15","/home/captainspring/Desktop/code/WebSocket/myproject2/clientslack/src/Config/refractorDate.js":"16"},{"size":464,"mtime":1609508946064,"results":"17","hashOfConfig":"18"},{"size":4841,"mtime":1609507351741,"results":"19","hashOfConfig":"18"},{"size":189,"mtime":1609393395195,"results":"20","hashOfConfig":"18"},{"size":8035,"mtime":1609505850812,"results":"21","hashOfConfig":"18"},{"size":10904,"mtime":1609644626298,"results":"22","hashOfConfig":"18"},{"size":592,"mtime":1609518803707,"results":"23","hashOfConfig":"18"},{"size":444,"mtime":1609593724501,"results":"24","hashOfConfig":"18"},{"size":612,"mtime":1609680743673,"results":"25","hashOfConfig":"18"},{"size":2328,"mtime":1609684962850,"results":"26","hashOfConfig":"18"},{"size":1710,"mtime":1609685201505,"results":"27","hashOfConfig":"18"},{"size":1056,"mtime":1609684411138,"results":"28","hashOfConfig":"18"},{"size":362,"mtime":1609518314127,"results":"29","hashOfConfig":"18"},{"size":997,"mtime":1609687384892,"results":"30","hashOfConfig":"18"},{"size":313,"mtime":1609516718954,"results":"31","hashOfConfig":"18"},{"size":1029,"mtime":1609595674969,"results":"32","hashOfConfig":"18"},{"size":1269,"mtime":1609685046595,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"z4vh3a",{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/captainspring/Desktop/code/WebSocket/myproject2/clientslack/src/App.js",[],"/home/captainspring/Desktop/code/WebSocket/myproject2/clientslack/src/Components/Login/Index.js",["73"],"import React, { useEffect, useState } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\n\n//material ui\nimport Backdrop from '@material-ui/core/Backdrop'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport { makeStyles } from '@material-ui/core/styles'\n//\nimport { FETCH_POST } from '../../API/index'\nimport { CHECK_USER } from '../../Config/Index'\n//\nimport '../../css/main.css'\nimport '../../css/util.css'\nconst useStyles = makeStyles((theme) => ({\n\tbackdrop: {\n\t\tzIndex: theme.zIndex.drawer + 1,\n\t\tcolor: '#fff',\n\t},\n}))\nconst Login = () => {\n\tconst [username, setUsername] = useState('')\n\tconst [password, setPassword] = useState('')\n\tconst [usernameError, setUsernameError] = useState(['', false])\n\tconst [passwordError, setPasswordError] = useState(['', false])\n\tconst history = useHistory()\n\n\tconst classes = useStyles()\n\tconst [open, setOpen] = React.useState(false)\n\tconst handleClose = () => {\n\t\tsetOpen(false)\n\t}\n\tconst handleToggle = () => {\n\t\tsetOpen(!open)\n\t}\n\n\tconst handleChange = (e) => {\n\t\tconst { name, value } = e.target\n\t\tif (name === 'username') {\n\t\t\tsetUsernameError(['', false])\n\t\t\tsetUsername(value)\n\t\t}\n\t\tif (name === 'password') {\n\t\t\tsetPasswordError(['', false])\n\t\t\tsetPassword(value)\n\t\t}\n\t}\n\tconst handleSubmit = async (e) => {\n\t\te.preventDefault()\n\t\tif (username.length < 6) {\n\t\t\tsetUsernameError(['At least 6 characters', true])\n\t\t\treturn\n\t\t}\n\t\tif (password.length < 6) {\n\t\t\tsetPasswordError(['At least 6 characters', true])\n\t\t\treturn\n\t\t}\n\t\thandleToggle()\n\t\tawait FETCH_POST(CHECK_USER, { username, password })\n\t\t\t.then((res) => {\n\t\t\t\thandleClose()\n\t\t\t\treturn res.json()\n\t\t\t})\n\t\t\t.then(\n\t\t\t\t(rs) => {\n\t\t\t\t\tif (rs.success) {\n\t\t\t\t\t\tlocalStorage.setItem('token', rs.token)\n\t\t\t\t\t\thistory.replace('/main')\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\tif (rs.err) {\n\t\t\t\t\t\tsetUsernameError([\n\t\t\t\t\t\t\t'User name or password was incorect!',\n\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t])\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t(err) => {\n\t\t\t\t\tconsole.log(err)\n\t\t\t\t},\n\t\t\t)\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.log(error)\n\t\t\t})\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<div className='limiter'>\n\t\t\t\t<div className='container-login100'>\n\t\t\t\t\t<div className='wrap-login100 p-l-55 p-r-55 p-t-65 p-b-54'>\n\t\t\t\t\t\t<form className='login100-form validate-form'>\n\t\t\t\t\t\t\t<span className='login100-form-title p-b-49'>\n\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\tLogin{' '}\n\t\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\tusernameError[0] !== ''\n\t\t\t\t\t\t\t\t\t\t? 'wrap-input100 validate-input m-b-23 alert-validate'\n\t\t\t\t\t\t\t\t\t\t: 'wrap-input100 validate-input m-b-23'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tdata-validate={usernameError[0]}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<span className='label-input100'>Username</span>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\t\tusername !== ''\n\t\t\t\t\t\t\t\t\t\t\t? usernameError[1] === true\n\t\t\t\t\t\t\t\t\t\t\t\t? 'alert-validate input100 has-val'\n\t\t\t\t\t\t\t\t\t\t\t\t: 'input100 has-val'\n\t\t\t\t\t\t\t\t\t\t\t: usernameError[1] === true\n\t\t\t\t\t\t\t\t\t\t\t? 'alert-validate input100 '\n\t\t\t\t\t\t\t\t\t\t\t: 'input100'\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\tname='username'\n\t\t\t\t\t\t\t\t\tplaceholder='Type your username'\n\t\t\t\t\t\t\t\t\tvalue={username}\n\t\t\t\t\t\t\t\t\tonChange={(e) => handleChange(e)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\tclassName='focus-input100'\n\t\t\t\t\t\t\t\t\tdata-symbol='&#xf206;'\n\t\t\t\t\t\t\t\t></span>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\tpasswordError[0] !== ''\n\t\t\t\t\t\t\t\t\t\t? 'wrap-input100 validate-input alert-validate'\n\t\t\t\t\t\t\t\t\t\t: 'wrap-input100 validate-input'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tdata-validate={passwordError[0]}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<span className='label-input100'>Password</span>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\t\tpassword !== ''\n\t\t\t\t\t\t\t\t\t\t\t? passwordError[1] === true\n\t\t\t\t\t\t\t\t\t\t\t\t? 'alert-validate input100 has-val'\n\t\t\t\t\t\t\t\t\t\t\t\t: 'input100 has-val'\n\t\t\t\t\t\t\t\t\t\t\t: passwordError[1] === true\n\t\t\t\t\t\t\t\t\t\t\t? 'alert-validate input100 '\n\t\t\t\t\t\t\t\t\t\t\t: 'input100'\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\t\tname='password'\n\t\t\t\t\t\t\t\t\tplaceholder='Type your password'\n\t\t\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\t\t\tonChange={(e) => handleChange(e)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\tclassName='focus-input100'\n\t\t\t\t\t\t\t\t\tdata-symbol='&#xf190;'\n\t\t\t\t\t\t\t\t></span>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className='container-login100-form-btn'>\n\t\t\t\t\t\t\t\t<div className='wrap-login100-form-btn'>\n\t\t\t\t\t\t\t\t\t<div className='login100-form-bgbtn'></div>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclassName='login100-form-btn'\n\t\t\t\t\t\t\t\t\t\tonClick={(e) => handleSubmit(e)}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tLogin\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className='flex-col-c p-t-155'>\n\t\t\t\t\t\t\t\t<span className='txt1 p-b-17'>\n\t\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t\tOr Sign Up Using{' '}\n\t\t\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t\t\t<Link to='/register'>REGISTER</Link>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div id='dropDownSelect1'></div>\n\n\t\t\t<Backdrop className={classes.backdrop} open={open}>\n\t\t\t\t<CircularProgress color='inherit' />\n\t\t\t</Backdrop>\n\t\t</>\n\t)\n}\n\nexport default Login\n",["74","75"],"/home/captainspring/Desktop/code/WebSocket/myproject2/clientslack/src/index.js",[],"/home/captainspring/Desktop/code/WebSocket/myproject2/clientslack/src/Components/Register/Index.js",[],["76","77"],"/home/captainspring/Desktop/code/WebSocket/myproject2/clientslack/src/Components/Main/Index.js",["78","79"],"import React, { useState, useEffect } from 'react'\nimport io from 'socket.io-client'\n//\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport MuiAlert from '@material-ui/lab/Alert'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Backdrop from '@material-ui/core/Backdrop'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n//\nimport Channel from '../Main-Channel/Index'\nimport Status from '../Main-Status/Index'\nimport Topic from '../Main-Topic/Index'\nimport Thread from '../Main-Thread/Index'\nimport {\n\tURL_SERVER,\n\tCREATE_CHANNEL,\n\tGET_LIST_CHANNEL,\n\tCREATE_TOPIC,\n\tGET_LIST_TOPIC,\n\tGET_LIST_REPLY,\n\tADD_REPLY,\n\tPUSH_REPLY_TO_TOPIC,\n} from '../../Config/Index'\nimport { FETCH_POST, FETCH_GET } from '../../API/index'\n//\nimport './index.css'\nimport { lightGreen } from '@material-ui/core/colors'\n//\nlet socket\n//\nfunction Alert(props) {\n\treturn <MuiAlert elevation={6} variant='filled' {...props} />\n}\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\twidth: '100%',\n\t\t'& > * + *': {\n\t\t\tmarginTop: theme.spacing(2),\n\t\t},\n\t},\n\tbackdrop: {\n\t\tzIndex: theme.zIndex.drawer + 1,\n\t\tcolor: '#fff',\n\t},\n}))\n\n//\nconst Index = (props) => {\n\tconst { username } = props\n\tconst classes = useStyles()\n\t//\n\n\t//\n\tconst [openBackDrop, setOpenBackDrop] = React.useState(false)\n\tconst [openDialog, setOpenDialog] = React.useState(false)\n\tconst [openDialogTopic, setOpenDialogTopic] = React.useState(false)\n\tconst [openSnack, setOpenSnack] = React.useState(false)\n\t//\n\tconst [idtopic, setIdtopic] = useState('')\n\tconst [listreply, setListreply] = useState([])\n\tconst [topic_content, setTopic_content] = useState('')\n\tconst [reply_content, setReply_content] = useState('')\n\tconst [listtopic, setListtopic] = useState([])\n\tconst [listchannel, setListchannel] = useState([])\n\tconst [current_channel, setCurrent_channel] = useState('')\n\tconst [current_topic, setCurrent_topic] = useState('')\n\tconst [channel_name, setChanel_name] = useState('')\n\tconst [isAddSuccess, setIsAddSuccess] = useState(false)\n\tconst [url, setUrl] = useState(URL_SERVER)\n\t//\n\t//\n\tconst loadChannelFromDB = async () => {\n\t\tawait FETCH_GET(GET_LIST_CHANNEL)\n\t\t\t.then((res) => res.json())\n\t\t\t.then(\n\t\t\t\t(rs) => {\n\t\t\t\t\tconst newList = []\n\t\t\t\t\tconst listchannelDB = rs.listchannel\n\t\t\t\t\tlistchannelDB.map((channel) =>\n\t\t\t\t\t\tnewList.push({ name: channel.name, isJoin: false }),\n\t\t\t\t\t)\n\t\t\t\t\tsetListchannel(newList)\n\t\t\t\t},\n\t\t\t\t(err) => {},\n\t\t\t)\n\t\t\t.catch((error) => console.log(error))\n\t}\n\t// socket add channel\n\n\tuseEffect(() => {\n\t\tsocket = io(url)\n\t}, [url])\n\tuseEffect(() => {\n\t\tloadChannelFromDB()\n\t}, [])\n\tuseEffect(() => {\n\t\tsocket.on('some-one-add-channel', (newChannel) => {\n\t\t\tsetListchannel([...listchannel, newChannel])\n\t\t})\n\t}, [listchannel])\n\tuseEffect(() => {\n\t\tsocket.on('some-one-add-topic', (send_topic) => {\n\t\t\tsetListtopic([...listtopic, send_topic])\n\t\t})\n\t}, [listtopic])\n\tuseEffect(() => {\n\t\tsocket.on('some-one-add-reply', (newReply) => {\n\t\t\tsetListreply([...listreply, newReply])\n\t\t})\n\t}, [listreply])\n\tuseEffect(() => {\n\t\tsocket.on('some-one-update-reply-array', ({ newReply, _id_topic }) => {\n\t\t\tlet newlisttopic = []\n\t\t\tlisttopic.map((topic) => {\n\t\t\t\tif (topic._id === _id_topic) {\n\t\t\t\t\ttopic.reply = newReply\n\t\t\t\t}\n\t\t\t\treturn newlisttopic.push(topic)\n\t\t\t})\n\t\t\tsetListtopic(newlisttopic)\n\t\t})\n\t}, [listtopic, idtopic])\n\t//\n\n\tconst handleAddChanel = async () => {\n\t\tsetOpenDialog(false)\n\t\tsetOpenBackDrop(true)\n\t\tawait FETCH_POST(CREATE_CHANNEL, { name: channel_name })\n\t\t\t.then((res) => {\n\t\t\t\tsetOpenBackDrop(false)\n\t\t\t\treturn res.json()\n\t\t\t})\n\t\t\t.then(\n\t\t\t\t(rs) => {\n\t\t\t\t\tif (rs.success) {\n\t\t\t\t\t\tlet newChannel = {\n\t\t\t\t\t\t\tname: channel_name,\n\t\t\t\t\t\t\tisJoin: false,\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsocket.emit('add-channel', newChannel)\n\t\t\t\t\t\tsetIsAddSuccess(true)\n\t\t\t\t\t}\n\t\t\t\t\tif (rs.err) {\n\t\t\t\t\t\tsetIsAddSuccess(false)\n\t\t\t\t\t}\n\t\t\t\t\tsetOpenSnack(true)\n\t\t\t\t},\n\t\t\t\t(err) => {\n\t\t\t\t\tsetIsAddSuccess(false)\n\t\t\t\t\tsetOpenSnack(true)\n\t\t\t\t},\n\t\t\t)\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.log(error)\n\t\t\t\tsetIsAddSuccess(false)\n\t\t\t\tsetOpenSnack(true)\n\t\t\t})\n\t\tsetChanel_name('')\n\t}\n\tconst handleAddPost = async () => {\n\t\tsetOpenBackDrop(true)\n\t\tawait FETCH_POST(CREATE_TOPIC, {\n\t\t\tuser: username,\n\t\t\tchannel: current_channel,\n\t\t\tcontent: topic_content,\n\t\t})\n\t\t\t.then((res) => {\n\t\t\t\tsetOpenBackDrop(false)\n\t\t\t\treturn res.json()\n\t\t\t})\n\t\t\t.then((rs) => {\n\t\t\t\tif (rs.newTopic) {\n\t\t\t\t\tconst send_topic = rs.newTopic\n\t\t\t\t\tsocket.emit('add-topic', send_topic)\n\t\t\t\t\tsetIsAddSuccess(true)\n\t\t\t\t\tsetOpenSnack(true)\n\t\t\t\t}\n\t\t\t\tif (rs.err) {\n\t\t\t\t\tsetIsAddSuccess(false)\n\t\t\t\t\tsetOpenSnack(true)\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err)\n\t\t\t\tsetIsAddSuccess(false)\n\t\t\t\tsetOpenSnack(true)\n\t\t\t})\n\n\t\tsetOpenDialogTopic(false)\n\t\tsetTopic_content('')\n\t}\n\tconst handleJoinChannel = async (channelName) => {\n\t\t//if before join another topic\n\n\t\tif (current_channel !== '') {\n\t\t\tsocket.emit('leave-channel', current_channel)\n\t\t}\n\n\t\t// reset list reply\n\t\tsetListreply([])\n\n\t\t// animation channel bar\n\t\tconst fakeListChannel = []\n\t\tfor (let i = 0; i < listchannel.length; ++i) {\n\t\t\tif (listchannel[i].name === channelName) {\n\t\t\t\tfakeListChannel.push({\n\t\t\t\t\tname: channelName,\n\t\t\t\t\tisJoin: true,\n\t\t\t\t})\n\t\t\t\tsetCurrent_channel(channelName)\n\t\t\t} else {\n\t\t\t\tfakeListChannel.push({\n\t\t\t\t\tname: listchannel[i].name,\n\t\t\t\t\tisJoin: false,\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tsetListchannel(fakeListChannel)\n\t\tsetOpenBackDrop(true)\n\t\tsetListtopic([])\n\t\t//load data post\n\t\tawait FETCH_POST(GET_LIST_TOPIC, { channelName })\n\t\t\t.then((res) => {\n\t\t\t\tsetOpenBackDrop(false)\n\t\t\t\treturn res.json()\n\t\t\t})\n\t\t\t.then((rs) => {\n\t\t\t\tsocket.emit('join-channel', channelName)\n\t\t\t\tsetListtopic(rs.listTopic)\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.log(error)\n\t\t\t\tsetIsAddSuccess(false)\n\t\t\t\tsetOpenSnack(true)\n\t\t\t})\n\t}\n\tconst handleClickTopic = async (_id_topic) => {\n\t\tif (idtopic !== '') {\n\t\t\tsocket.emit('leave-topic', idtopic)\n\t\t}\n\t\tsetCurrent_topic(_id_topic)\n\t\tsetOpenBackDrop(true)\n\t\tawait FETCH_POST(GET_LIST_REPLY, { _id_topic })\n\t\t\t.then((res) => {\n\t\t\t\tsetOpenBackDrop(false)\n\t\t\t\treturn res.json()\n\t\t\t})\n\t\t\t.then((rs) => {\n\t\t\t\tsocket.emit('join-topic', _id_topic)\n\t\t\t\tsetIdtopic(_id_topic)\n\t\t\t\tsetListreply(rs.listreply)\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.log(error)\n\t\t\t\tsetIsAddSuccess(false)\n\t\t\t\tsetOpenSnack(true)\n\t\t\t})\n\t}\n\tconst handleAddReply = async () => {\n\t\tsetOpenBackDrop(true)\n\t\t// add reply\n\t\tlet id_reply = null\n\t\tawait FETCH_POST(ADD_REPLY, {\n\t\t\tusername,\n\t\t\t_id_topic: idtopic,\n\t\t\tcontent: reply_content,\n\t\t})\n\t\t\t.then((res) => {\n\t\t\t\tsetOpenBackDrop(false)\n\t\t\t\treturn res.json()\n\t\t\t})\n\t\t\t.then((rs) => {\n\t\t\t\tif (rs.newReply) {\n\t\t\t\t\tid_reply = rs.newReply._id\n\t\t\t\t\tconst { newReply } = rs\n\t\t\t\t\tsocket.emit('add-reply', newReply)\n\n\t\t\t\t\tsetIsAddSuccess(true)\n\t\t\t\t\tsetOpenSnack(true)\n\t\t\t\t}\n\t\t\t\tif (rs.err) {\n\t\t\t\t\tsetIsAddSuccess(false)\n\t\t\t\t\tsetOpenSnack(true)\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err)\n\t\t\t\tsetIsAddSuccess(false)\n\t\t\t\tsetOpenSnack(true)\n\t\t\t})\n\t\t//add reply for topic\n\t\tif (id_reply !== null) {\n\t\t\tawait FETCH_POST(PUSH_REPLY_TO_TOPIC, {\n\t\t\t\tid_reply,\n\t\t\t\t_id_topic: idtopic,\n\t\t\t})\n\t\t\t\t.then((res) => res.json())\n\t\t\t\t.then((rs) => {\n\t\t\t\t\tlet newReply = rs.reply\n\t\t\t\t\tsocket.emit('update-reply-array', { newReply, _id_topic : idtopic })\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tconsole.log(error)\n\t\t\t\t})\n\t\t}\n\t}\n\t//\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<div class='main'>\n\t\t\t\t<div className='nav-bar'></div>\n\t\t\t\t<div className='chanel-content'>\n\t\t\t\t\t<Channel\n\t\t\t\t\t\thandleClickOpen={() => setOpenDialog(true)}\n\t\t\t\t\t\tlistchannel={listchannel}\n\t\t\t\t\t\thandleJoinChannel={handleJoinChannel}\n\t\t\t\t\t/>\n\t\t\t\t\t<div class='content'>\n\t\t\t\t\t\t<Status\n\t\t\t\t\t\t\tnumberPost={listtopic.length}\n\t\t\t\t\t\t\tchannelName={current_channel}\n\t\t\t\t\t\t\topenAddTopicForm={() => {\n\t\t\t\t\t\t\t\tif (current_channel !== '')\n\t\t\t\t\t\t\t\t\tsetOpenDialogTopic(true)\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tsetIsAddSuccess(false)\n\t\t\t\t\t\t\t\t\tsetOpenSnack(true)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div class='down'>\n\t\t\t\t\t\t\t<Topic\n\t\t\t\t\t\t\t\tlisttopic={listtopic}\n\t\t\t\t\t\t\t\thandleClickTopic={handleClickTopic}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Thread\n\t\t\t\t\t\t\t\tusername={username}\n\t\t\t\t\t\t\t\thandleAddReply={() => {\n\t\t\t\t\t\t\t\t\tif (current_topic === '') {\n\t\t\t\t\t\t\t\t\t\tsetIsAddSuccess(false)\n\t\t\t\t\t\t\t\t\t\tsetOpenSnack(true)\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\thandleAddReply()\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tsetReply_content('')\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\treply_content={reply_content}\n\t\t\t\t\t\t\t\tsetReply_content={setReply_content}\n\t\t\t\t\t\t\t\tlistreply={listreply}\n\t\t\t\t\t\t\t\tcloseThread={() => {\n\t\t\t\t\t\t\t\t\tsetListreply([])\n\t\t\t\t\t\t\t\t\tsetIdtopic('')\n\t\t\t\t\t\t\t\t\tsocket.emit('leave-topic', idtopic)\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<Dialog\n\t\t\t\topen={openDialogTopic}\n\t\t\t\tonClose={() => setOpenDialogTopic(false)}\n\t\t\t\taria-labelledby='form-dialog-title'\n\t\t\t>\n\t\t\t\t<DialogTitle id='form-dialog-title'>Add Post</DialogTitle>\n\t\t\t\t<DialogContent>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\tmargin='dense'\n\t\t\t\t\t\tid='topic'\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tvalue={topic_content}\n\t\t\t\t\t\tonChange={(e) => setTopic_content(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t</DialogContent>\n\t\t\t\t<DialogActions>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tsetOpenDialogTopic(false)\n\t\t\t\t\t\t\tsetTopic_content('')\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t>\n\t\t\t\t\t\tCancel\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button onClick={() => handleAddPost()} color='primary'>\n\t\t\t\t\t\tAdd\n\t\t\t\t\t</Button>\n\t\t\t\t</DialogActions>\n\t\t\t</Dialog>\n\t\t\t<Dialog\n\t\t\t\topen={openDialog}\n\t\t\t\tonClose={() => setOpenDialog(false)}\n\t\t\t\taria-labelledby='form-dialog-title'\n\t\t\t>\n\t\t\t\t<DialogTitle id='form-dialog-title'>Add Channel</DialogTitle>\n\t\t\t\t<DialogContent>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\tmargin='dense'\n\t\t\t\t\t\tid='channel'\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tvalue={channel_name}\n\t\t\t\t\t\tonChange={(e) => setChanel_name(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t</DialogContent>\n\t\t\t\t<DialogActions>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tsetOpenDialog(false)\n\t\t\t\t\t\t\tsetChanel_name('')\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t>\n\t\t\t\t\t\tCancel\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button onClick={() => handleAddChanel()} color='primary'>\n\t\t\t\t\t\tAdd\n\t\t\t\t\t</Button>\n\t\t\t\t</DialogActions>\n\t\t\t</Dialog>\n\t\t\t<Snackbar\n\t\t\t\topen={openSnack}\n\t\t\t\tautoHideDuration={6000}\n\t\t\t\tonClose={() => setOpenSnack(false)}\n\t\t\t>\n\t\t\t\t{isAddSuccess ? (\n\t\t\t\t\t<Alert\n\t\t\t\t\t\tonClose={() => setOpenSnack(false)}\n\t\t\t\t\t\tseverity='success'\n\t\t\t\t\t>\n\t\t\t\t\t\tAdd successful!\n\t\t\t\t\t</Alert>\n\t\t\t\t) : (\n\t\t\t\t\t<Alert severity='error'>Some error just happens!</Alert>\n\t\t\t\t)}\n\t\t\t</Snackbar>\n\t\t\t<Backdrop\n\t\t\t\tclassName={classes.backdrop}\n\t\t\t\topen={openBackDrop}\n\t\t\t\tonClick={() => setOpenBackDrop(false)}\n\t\t\t>\n\t\t\t\t<CircularProgress color='inherit' />\n\t\t\t</Backdrop>\n\t\t</div>\n\t)\n}\n\nexport default Index\n",["80","81"],"/home/captainspring/Desktop/code/WebSocket/myproject2/clientslack/src/Components/Main-Channel/Index.js",[],["82","83"],"/home/captainspring/Desktop/code/WebSocket/myproject2/clientslack/src/Components/Main-Status/Index.js",[],"/home/captainspring/Desktop/code/WebSocket/myproject2/clientslack/src/Components/Main-Topic/Index.js",[],"/home/captainspring/Desktop/code/WebSocket/myproject2/clientslack/src/Components/TopicPost/Index.js",["84","85"],"/home/captainspring/Desktop/code/WebSocket/myproject2/clientslack/src/Components/Main-Thread/Index.js",["86"],"import React, { useState, useEffect, useRef } from 'react'\nimport SubThread from '../Sub-Thread/Index'\nimport { URL_SERVER } from '../../Config/Index'\nimport { FETCH_POST } from '../../API/index'\nimport { GET_IMAGE } from '../../Config/Index'\nconst Index = (props) => {\n\tconst {\n\t\tusername,\n\t\thandleAddReply,\n\t\treply_content,\n\t\tsetReply_content,\n\t\tlistreply,\n\t\tcloseThread,\n\t} = props\n\tconst [img, setImg] = useState('')\n\tconst messagesEndRef = useRef(null)\n\tconst loadImage = async () => {\n\t\tawait FETCH_POST(GET_IMAGE, { username })\n\t\t\t.then((res) => res.json())\n\t\t\t.then((rs) => {\n\t\t\t\tif (rs.img) {\n\t\t\t\t\tsetImg(rs.img)\n\t\t\t\t}\n\t\t\t\tif (rs.err) {\n\t\t\t\t\tconsole.log('err')\n\t\t\t\t}\n\t\t\t})\n\t}\n\tconst scrollToBottom = () => {\n\t\tmessagesEndRef.current.scrollIntoView({ behavior: 'smooth' })\n\t}\n\n\tuseEffect(scrollToBottom, [listreply])\n\tuseEffect(() => {\n\t\tloadImage()\n\t}, [])\n\treturn (\n\t\t<div class='down-right'>\n\t\t\t<div class='infor-thread'>\n\t\t\t\t<div class='thread'>\n\t\t\t\t\t<span class='header'>#Thread</span>\n\t\t\t\t\t{/* <i class='far fa-times-circle' onClick={closeThread}></i> */}\n\t\t\t\t\t<span onClick={closeThread} class = 'equal-to-i'>Close</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class='down-right-post'>\n\t\t\t\t{listreply.map((reply) => {\n\t\t\t\t\treturn <SubThread reply={reply} />\n\t\t\t\t})}\n\t\t\t\t<div ref={messagesEndRef} />\n\t\t\t</div>\n\t\t\t<div class='your-comment'>\n\t\t\t\t<img src={URL_SERVER + '/image/' + img} alt='' />\n\t\t\t\t<input\n\t\t\t\t\ttype='text'\n\t\t\t\t\tplaceholder='#Comment'\n\t\t\t\t\tvalue={reply_content}\n\t\t\t\t\tname='reply'\n\t\t\t\t\tonChange={(e) => setReply_content(e.target.value)}\n\t\t\t\t/>\n\t\t\t\t<button class='btn-send' onClick={handleAddReply}>\n\t\t\t\t\t<i class='fas fa-plus'></i>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Index\n","/home/captainspring/Desktop/code/WebSocket/myproject2/clientslack/src/Components/Sub-Thread/Index.js",["87"],"/home/captainspring/Desktop/code/WebSocket/myproject2/clientslack/src/Components/Sub-Channel/Index.js",[],"/home/captainspring/Desktop/code/WebSocket/myproject2/clientslack/src/Config/Index.js",[],"/home/captainspring/Desktop/code/WebSocket/myproject2/clientslack/src/API/index.js",[],"/home/captainspring/Desktop/code/WebSocket/myproject2/clientslack/src/Components/WrapMain/Index.js",[],"/home/captainspring/Desktop/code/WebSocket/myproject2/clientslack/src/Config/refractorDate.js",[],{"ruleId":"88","severity":1,"message":"89","line":1,"column":17,"nodeType":"90","messageId":"91","endLine":1,"endColumn":26},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"92","replacedBy":"96"},{"ruleId":"94","replacedBy":"97"},{"ruleId":"88","severity":1,"message":"98","line":33,"column":10,"nodeType":"90","messageId":"91","endLine":33,"endColumn":20},{"ruleId":"88","severity":1,"message":"99","line":76,"column":14,"nodeType":"90","messageId":"91","endLine":76,"endColumn":20},{"ruleId":"92","replacedBy":"100"},{"ruleId":"94","replacedBy":"101"},{"ruleId":"92","replacedBy":"102"},{"ruleId":"94","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":40,"column":5,"nodeType":"106","endLine":40,"endColumn":7,"suggestions":"107"},{"ruleId":"104","severity":1,"message":"108","line":44,"column":5,"nodeType":"106","endLine":44,"endColumn":7,"suggestions":"109"},{"ruleId":"104","severity":1,"message":"105","line":36,"column":5,"nodeType":"106","endLine":36,"endColumn":7,"suggestions":"110"},{"ruleId":"104","severity":1,"message":"105","line":23,"column":5,"nodeType":"106","endLine":23,"endColumn":7,"suggestions":"111"},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-native-reassign",["112"],"no-negated-in-lhs",["113"],["112"],["113"],"'lightGreen' is defined but never used.","'setUrl' is assigned a value but never used.",["112"],["113"],["112"],["113"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadImage'. Either include it or remove the dependency array.","ArrayExpression",["114"],"React Hook useEffect has a missing dependency: 'loadImgDate'. Either include it or remove the dependency array.",["115"],["116"],["117"],"no-global-assign","no-unsafe-negation",{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},{"desc":"118","fix":"122"},{"desc":"118","fix":"123"},"Update the dependencies array to be: [loadImage]",{"range":"124","text":"125"},"Update the dependencies array to be: [loadImgDate]",{"range":"126","text":"127"},{"range":"128","text":"125"},{"range":"129","text":"125"},[1121,1123],"[loadImage]",[1165,1167],"[loadImgDate]",[862,864],[609,611]]